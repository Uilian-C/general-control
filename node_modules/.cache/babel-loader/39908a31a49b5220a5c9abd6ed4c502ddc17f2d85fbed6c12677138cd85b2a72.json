{"ast":null,"code":"/*! dom-to-image-more 23-03-2023 */\n!function (n) {\n  \"use strict\";\n\n  const s = function () {\n      let t = 0;\n      return {\n        escape: function (t) {\n          return t.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n        },\n        isDataUrl: function (t) {\n          return -1 !== t.search(/^(data:)/);\n        },\n        canvasToBlob: function (e) {\n          if (e.toBlob) return new Promise(function (t) {\n            e.toBlob(t);\n          });\n          return function (o) {\n            return new Promise(function (t) {\n              var e = a(o.toDataURL().split(\",\")[1]),\n                n = e.length,\n                r = new Uint8Array(n);\n              for (let t = 0; t < n; t++) r[t] = e.charCodeAt(t);\n              t(new Blob([r], {\n                type: \"image/png\"\n              }));\n            });\n          }(e);\n        },\n        resolveUrl: function (t, e) {\n          var n = document.implementation.createHTMLDocument(),\n            r = n.createElement(\"base\"),\n            o = (n.head.appendChild(r), n.createElement(\"a\"));\n          return n.body.appendChild(o), r.href = e, o.href = t, o.href;\n        },\n        getAndEncode: function (u) {\n          let t = c.impl.urlCache.find(function (t) {\n            return t.url === u;\n          });\n          t || (t = {\n            url: u,\n            promise: null\n          }, c.impl.urlCache.push(t));\n          null === t.promise && (c.impl.options.cacheBust && (u += (/\\?/.test(u) ? \"&\" : \"?\") + new Date().getTime()), t.promise = new Promise(function (e) {\n            const t = c.impl.options.httpTimeout,\n              n = new XMLHttpRequest();\n            n.onreadystatechange = function () {\n              if (4 === n.readyState) if (200 !== n.status) r ? e(r) : i(\"cannot fetch resource: \".concat(u, \", status: \") + n.status);else {\n                const t = new FileReader();\n                t.onloadend = function () {\n                  e(t.result);\n                }, t.readAsDataURL(n.response);\n              }\n            }, n.ontimeout = function () {\n              r ? e(r) : i(\"timeout of \".concat(t, \"ms occured while fetching resource: \") + u);\n            }, n.responseType = \"blob\", n.timeout = t, c.impl.options.useCredentials && (n.withCredentials = !0), n.open(\"GET\", u, !0), n.send();\n            let r;\n            var o;\n            function i(t) {\n              console.error(t), e(\"\");\n            }\n            c.impl.options.imagePlaceholder && (o = c.impl.options.imagePlaceholder.split(/,/)) && o[1] && (r = o[1]);\n          }));\n          return t.promise;\n        },\n        uid: function () {\n          return \"u\" + (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) + t++;\n        },\n        delay: function (n) {\n          return function (e) {\n            return new Promise(function (t) {\n              setTimeout(function () {\n                t(e);\n              }, n);\n            });\n          };\n        },\n        asArray: function (e) {\n          var n = [],\n            r = e.length;\n          for (let t = 0; t < r; t++) n.push(e[t]);\n          return n;\n        },\n        escapeXhtml: function (t) {\n          return t.replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/\\n/g, \"%0A\");\n        },\n        makeImage: function (r) {\n          return \"data:,\" !== r ? new Promise(function (t, e) {\n            const n = new Image();\n            c.impl.options.useCredentials && (n.crossOrigin = \"use-credentials\"), n.onload = function () {\n              window && window.requestAnimationFrame ? window.requestAnimationFrame(function () {\n                t(n);\n              }) : t(n);\n            }, n.onerror = e, n.src = r;\n          }) : Promise.resolve();\n        },\n        width: function (t) {\n          var e = o(t, \"width\");\n          {\n            var n, r;\n            if (isNaN(e)) return n = o(t, \"border-left-width\"), r = o(t, \"border-right-width\"), t.scrollWidth + n + r;\n          }\n          return e;\n        },\n        height: function (t) {\n          var e = o(t, \"height\");\n          {\n            var n, r;\n            if (isNaN(e)) return n = o(t, \"border-top-width\"), r = o(t, \"border-bottom-width\"), t.scrollHeight + n + r;\n          }\n          return e;\n        },\n        getWindow: e,\n        isElement: function (t) {\n          return t instanceof e(t).Element;\n        },\n        isHTMLElement: function (t) {\n          return t instanceof e(t).HTMLElement;\n        },\n        isHTMLCanvasElement: function (t) {\n          return t instanceof e(t).HTMLCanvasElement;\n        },\n        isHTMLInputElement: function (t) {\n          return t instanceof e(t).HTMLInputElement;\n        },\n        isHTMLImageElement: function (t) {\n          return t instanceof e(t).HTMLImageElement;\n        },\n        isHTMLTextAreaElement: function (t) {\n          return t instanceof e(t).HTMLTextAreaElement;\n        },\n        isSVGElement: function (t) {\n          return t instanceof e(t).SVGElement;\n        },\n        isSVGRectElement: function (t) {\n          return t instanceof e(t).SVGRectElement;\n        }\n      };\n      function e(t) {\n        t = t ? t.ownerDocument : void 0;\n        return (t ? t.defaultView : void 0) || n || window;\n      }\n      function o(t, e) {\n        let n = f(t).getPropertyValue(e);\n        return \"px\" !== n.slice(-2) ? NaN : (n = n.slice(0, -2), parseFloat(n));\n      }\n    }(),\n    o = function () {\n      const r = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n      return {\n        inlineAll: function (e, r, o) {\n          if (!t(e)) return Promise.resolve(e);\n          return Promise.resolve(e).then(n).then(function (t) {\n            let n = Promise.resolve(e);\n            return t.forEach(function (e) {\n              n = n.then(function (t) {\n                return i(t, e, r, o);\n              });\n            }), n;\n          });\n        },\n        shouldProcess: t,\n        impl: {\n          readUrls: n,\n          inline: i\n        }\n      };\n      function t(t) {\n        return -1 !== t.search(r);\n      }\n      function n(t) {\n        for (var e, n = []; null !== (e = r.exec(t));) n.push(e[1]);\n        return n.filter(function (t) {\n          return !s.isDataUrl(t);\n        });\n      }\n      function i(n, r, e, t) {\n        return Promise.resolve(r).then(function (t) {\n          return e ? s.resolveUrl(t, e) : t;\n        }).then(t || s.getAndEncode).then(function (t) {\n          return n.replace((e = r, new RegExp(\"(url\\\\(['\\\"]?)(\".concat(s.escape(e), \")(['\\\"]?\\\\))\"), \"g\")), \"$1\".concat(t, \"$3\"));\n          var e;\n        });\n      }\n    }(),\n    t = {\n      resolveAll: function () {\n        return e().then(function (t) {\n          return Promise.all(t.map(function (t) {\n            return t.resolve();\n          }));\n        }).then(function (t) {\n          return t.join(\"\\n\");\n        });\n      },\n      impl: {\n        readAll: e\n      }\n    };\n  function e() {\n    return Promise.resolve(s.asArray(document.styleSheets)).then(function (t) {\n      const n = [];\n      return t.forEach(function (e) {\n        if (Object.getPrototypeOf(e).hasOwnProperty(\"cssRules\")) try {\n          s.asArray(e.cssRules || []).forEach(n.push.bind(n));\n        } catch (t) {\n          console.log(\"Error while reading CSS rules from \" + e.href, t.toString());\n        }\n      }), n;\n    }).then(function (t) {\n      return t.filter(function (t) {\n        return t.type === CSSRule.FONT_FACE_RULE;\n      }).filter(function (t) {\n        return o.shouldProcess(t.style.getPropertyValue(\"src\"));\n      });\n    }).then(function (t) {\n      return t.map(e);\n    });\n    function e(e) {\n      return {\n        resolve: function () {\n          var t = (e.parentStyleSheet || {}).href;\n          return o.inlineAll(e.cssText, t);\n        },\n        src: function () {\n          return e.style.getPropertyValue(\"src\");\n        }\n      };\n    }\n  }\n  const r = {\n    inlineAll: function e(t) {\n      if (!s.isElement(t)) return Promise.resolve(t);\n      return n(t).then(function () {\n        return s.isHTMLImageElement(t) ? i(t).inline() : Promise.all(s.asArray(t.childNodes).map(function (t) {\n          return e(t);\n        }));\n      });\n      function n(r) {\n        const t = [\"background\", \"background-image\"],\n          e = t.map(function (e) {\n            const t = r.style.getPropertyValue(e),\n              n = r.style.getPropertyPriority(e);\n            return t ? o.inlineAll(t).then(function (t) {\n              r.style.setProperty(e, t, n);\n            }) : Promise.resolve();\n          });\n        return Promise.all(e).then(function () {\n          return r;\n        });\n      }\n    },\n    impl: {\n      newImage: i\n    }\n  };\n  function i(n) {\n    return {\n      inline: function (t) {\n        if (s.isDataUrl(n.src)) return Promise.resolve();\n        return Promise.resolve(n.src).then(t || s.getAndEncode).then(function (e) {\n          return new Promise(function (t) {\n            n.onload = t, n.onerror = t, n.src = e;\n          });\n        });\n      }\n    };\n  }\n  const u = {\n      imagePlaceholder: void 0,\n      cacheBust: !1,\n      useCredentials: !1,\n      httpTimeout: 3e4\n    },\n    c = {\n      toSvg: l,\n      toPng: function (t, e) {\n        return h(t, e).then(function (t) {\n          return t.toDataURL();\n        });\n      },\n      toJpeg: function (t, e) {\n        return h(t, e).then(function (t) {\n          return t.toDataURL(\"image/jpeg\", (e ? e.quality : void 0) || 1);\n        });\n      },\n      toBlob: function (t, e) {\n        return h(t, e).then(s.canvasToBlob);\n      },\n      toPixelData: function (e, t) {\n        return h(e, t).then(function (t) {\n          return t.getContext(\"2d\").getImageData(0, 0, s.width(e), s.height(e)).data;\n        });\n      },\n      toCanvas: h,\n      impl: {\n        fontFaces: t,\n        images: r,\n        util: s,\n        inliner: o,\n        urlCache: [],\n        options: {}\n      }\n    },\n    f = (\"object\" == typeof exports && \"object\" == typeof module ? module.exports = c : n.domtoimage = c, n.getComputedStyle || window.getComputedStyle),\n    a = n.atob || window.atob;\n  function l(r, o) {\n    const e = c.impl.util.getWindow(r);\n    var t = o = o || {};\n    return void 0 === t.imagePlaceholder ? c.impl.options.imagePlaceholder = u.imagePlaceholder : c.impl.options.imagePlaceholder = t.imagePlaceholder, void 0 === t.cacheBust ? c.impl.options.cacheBust = u.cacheBust : c.impl.options.cacheBust = t.cacheBust, void 0 === t.useCredentials ? c.impl.options.useCredentials = u.useCredentials : c.impl.options.useCredentials = t.useCredentials, void 0 === t.httpTimeout ? c.impl.options.httpTimeout = u.httpTimeout : c.impl.options.httpTimeout = t.httpTimeout, Promise.resolve(r).then(function (t) {\n      return function i(e, u, o, c, a) {\n        if (\"SCRIPT\" === e.tagName || !o && u && !u(e)) return Promise.resolve();\n        return Promise.resolve(e).then(t).then(function (t) {\n          return n(e, t);\n        }).then(function (t) {\n          return r(e, t);\n        });\n        function t(t) {\n          return s.isHTMLCanvasElement(t) ? s.makeImage(t.toDataURL()) : t.cloneNode(!1);\n        }\n        function n(o, t) {\n          const e = o.childNodes;\n          return 0 === e.length ? Promise.resolve(t) : n(t, s.asArray(e)).then(function () {\n            return t;\n          });\n          function n(e, t) {\n            const n = f(o);\n            let r = Promise.resolve();\n            return t.forEach(function (t) {\n              r = r.then(function () {\n                return i(t, u, !1, n, a);\n              }).then(function (t) {\n                t && e.appendChild(t);\n              });\n            }), r;\n          }\n        }\n        function r(a, l) {\n          return s.isElement(l) ? Promise.resolve().then(t).then(e).then(n).then(r).then(function () {\n            return l;\n          }) : l;\n          function t() {\n            function r(t, e) {\n              e.font = t.font, e.fontFamily = t.fontFamily, e.fontFeatureSettings = t.fontFeatureSettings, e.fontKerning = t.fontKerning, e.fontSize = t.fontSize, e.fontStretch = t.fontStretch, e.fontStyle = t.fontStyle, e.fontVariant = t.fontVariant, e.fontVariantCaps = t.fontVariantCaps, e.fontVariantEastAsian = t.fontVariantEastAsian, e.fontVariantLigatures = t.fontVariantLigatures, e.fontVariantNumeric = t.fontVariantNumeric, e.fontVariationSettings = t.fontVariationSettings, e.fontWeight = t.fontWeight;\n            }\n            function t(t, e) {\n              const n = f(t);\n              n.cssText ? (e.style.cssText = n.cssText, r(n, e.style)) : (p(n, c, e), o && ([\"inset-block\", \"inset-block-start\", \"inset-block-end\"].forEach(t => e.style.removeProperty(t)), [\"left\", \"right\", \"top\", \"bottom\"].forEach(t => {\n                e.style.getPropertyValue(t) && e.style.setProperty(t, \"0px\");\n              })));\n            }\n            t(a, l);\n          }\n          function e() {\n            const c = s.uid();\n            function e(o) {\n              const i = f(a, o),\n                u = i.getPropertyValue(\"content\");\n              if (\"\" !== u && \"none\" !== u) {\n                const e = l.getAttribute(\"class\") || \"\",\n                  n = (l.setAttribute(\"class\", e + \" \" + c), document.createElement(\"style\"));\n                function t() {\n                  const t = \".\".concat(c, \":\") + o,\n                    e = (i.cssText ? n : r)();\n                  return document.createTextNode(t + \"{\".concat(e, \"}\"));\n                  function n() {\n                    return \"\".concat(i.cssText, \" content: \").concat(u, \";\");\n                  }\n                  function r() {\n                    const t = s.asArray(i).map(e).join(\"; \");\n                    return t + \";\";\n                    function e(t) {\n                      const e = i.getPropertyValue(t),\n                        n = i.getPropertyPriority(t) ? \" !important\" : \"\";\n                      return t + \": \" + e + n;\n                    }\n                  }\n                }\n                n.appendChild(t()), l.appendChild(n);\n              }\n            }\n            [\":before\", \":after\"].forEach(function (t) {\n              e(t);\n            });\n          }\n          function n() {\n            s.isHTMLTextAreaElement(a) && (l.innerHTML = a.value), s.isHTMLInputElement(a) && l.setAttribute(\"value\", a.value);\n          }\n          function r() {\n            s.isSVGElement(l) && (l.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"), s.isSVGRectElement(l)) && [\"width\", \"height\"].forEach(function (t) {\n              const e = l.getAttribute(t);\n              e && l.style.setProperty(t, e);\n            });\n          }\n        }\n      }(t, o.filter, !0, null, e);\n    }).then(m).then(d).then(function (e) {\n      o.bgcolor && (e.style.backgroundColor = o.bgcolor);\n      o.width && (e.style.width = o.width + \"px\");\n      o.height && (e.style.height = o.height + \"px\");\n      o.style && Object.keys(o.style).forEach(function (t) {\n        e.style[t] = o.style[t];\n      });\n      let t = null;\n      \"function\" == typeof o.onclone && (t = o.onclone(e));\n      return Promise.resolve(t).then(function () {\n        return e;\n      });\n    }).then(function (t) {\n      return t = t, e = o.width || s.width(r), n = o.height || s.height(r), Promise.resolve(t).then(function (t) {\n        return t.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\"), new XMLSerializer().serializeToString(t);\n      }).then(s.escapeXhtml).then(function (t) {\n        return \"<foreignObject x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\">\".concat(t, \"</foreignObject>\");\n      }).then(function (t) {\n        return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(e, \"\\\" height=\\\"\").concat(n, \"\\\">\").concat(t, \"</svg>\");\n      }).then(function (t) {\n        return \"data:image/svg+xml;charset=utf-8,\" + t;\n      });\n      var e, n;\n    }).then(function (t) {\n      return c.impl.urlCache = [], function () {\n        y && (document.body.removeChild(y), y = null);\n        g && clearTimeout(g);\n        g = setTimeout(() => {\n          g = null, w = {};\n        }, 2e4);\n      }(), t;\n    });\n  }\n  function h(o, i) {\n    return l(o, i = i || {}).then(s.makeImage).then(s.delay(0)).then(function (t) {\n      var e = \"number\" != typeof i.scale ? 1 : i.scale,\n        n = function (t, e) {\n          var n = document.createElement(\"canvas\");\n          n.width = (i.width || s.width(t)) * e, n.height = (i.height || s.height(t)) * e, i.bgcolor && ((t = n.getContext(\"2d\")).fillStyle = i.bgcolor, t.fillRect(0, 0, n.width, n.height));\n          return n;\n        }(o, e),\n        r = n.getContext(\"2d\");\n      return r.msImageSmoothingEnabled = !1, r.imageSmoothingEnabled = !1, t && (r.scale(e, e), r.drawImage(t, 0, 0)), n;\n    });\n  }\n  function m(n) {\n    return t.resolveAll().then(function (t) {\n      var e;\n      return \"\" !== t && (e = document.createElement(\"style\"), n.appendChild(e), e.appendChild(document.createTextNode(t))), n;\n    });\n  }\n  function d(t) {\n    return r.inlineAll(t).then(function () {\n      return t;\n    });\n  }\n  function p(i, u, t) {\n    const c = function (t) {\n        if (w[t]) return w[t];\n        var e = function () {\n            if (y) return y.contentWindow;\n            var t = document.characterSet || \"UTF-8\",\n              e = document.doctype,\n              e = e ? (\"<!DOCTYPE \".concat(n(e.name), \" \").concat(n(e.publicId), \" \") + n(e.systemId)).trim() + \">\" : \"\";\n            return (y = document.createElement(\"iframe\")).id = \"domtoimage-sandbox-\" + s.uid(), y.style.visibility = \"hidden\", y.style.position = \"fixed\", document.body.appendChild(y), function (t, e, n, r) {\n              try {\n                return t.contentWindow.document.write(e + \"<html><head><meta charset='\".concat(n, \"'><title>\").concat(r, \"</title></head><body></body></html>\")), t.contentWindow;\n              } catch (t) {}\n              var o = document.createElement(\"meta\");\n              o.setAttribute(\"charset\", n);\n              try {\n                var i = document.implementation.createHTMLDocument(r),\n                  u = (i.head.appendChild(o), e + i.documentElement.outerHTML);\n                return t.setAttribute(\"srcdoc\", u), t.contentWindow;\n              } catch (t) {}\n              return t.contentDocument.head.appendChild(o), t.contentDocument.title = r, t.contentWindow;\n            }(y, e, t, \"domtoimage-sandbox\");\n            function n(t) {\n              var e;\n              return t ? ((e = document.createElement(\"div\")).innerText = t, e.innerHTML) : \"\";\n            }\n          }(),\n          n = e.document,\n          r = function (t, e) {\n            e = t.createElement(e);\n            return t.body.appendChild(e), e.textContent = \"​\", e;\n          }(n, t),\n          e = function (t, e) {\n            const n = {},\n              r = t.getComputedStyle(e);\n            return s.asArray(r).forEach(function (t) {\n              n[t] = \"width\" === t || \"height\" === t ? \"auto\" : r.getPropertyValue(t);\n            }), n;\n          }(e, r);\n        return function (t, e) {\n          t.body.removeChild(e);\n        }(n, r), w[t] = e;\n      }(t.tagName),\n      a = t.style;\n    s.asArray(i).forEach(function (t) {\n      var e,\n        n = i.getPropertyValue(t),\n        r = c[t],\n        o = u ? u.getPropertyValue(t) : void 0;\n      (n !== r || u && n !== o) && (r = i.getPropertyPriority(t), o = a, n = n, r = r, e = 0 <= [\"background-clip\"].indexOf(t = t), r ? (o.setProperty(t, n, r), e && o.setProperty(\"-webkit-\" + t, n, r)) : (o.setProperty(t, n), e && o.setProperty(\"-webkit-\" + t, n)));\n    });\n  }\n  let g = null,\n    y = null,\n    w = {};\n}(this);","map":{"version":3,"names":["n","s","t","escape","replace","isDataUrl","search","canvasToBlob","e","toBlob","Promise","o","a","toDataURL","split","length","r","Uint8Array","charCodeAt","Blob","type","resolveUrl","document","implementation","createHTMLDocument","createElement","head","appendChild","body","href","getAndEncode","u","c","impl","urlCache","find","url","promise","push","options","cacheBust","test","Date","getTime","httpTimeout","XMLHttpRequest","onreadystatechange","readyState","status","i","concat","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","useCredentials","withCredentials","open","send","console","error","imagePlaceholder","uid","Math","random","pow","toString","slice","delay","setTimeout","asArray","escapeXhtml","makeImage","Image","crossOrigin","onload","window","requestAnimationFrame","onerror","src","resolve","width","isNaN","scrollWidth","height","scrollHeight","getWindow","isElement","Element","isHTMLElement","HTMLElement","isHTMLCanvasElement","HTMLCanvasElement","isHTMLInputElement","HTMLInputElement","isHTMLImageElement","HTMLImageElement","isHTMLTextAreaElement","HTMLTextAreaElement","isSVGElement","SVGElement","isSVGRectElement","SVGRectElement","ownerDocument","defaultView","f","getPropertyValue","NaN","parseFloat","inlineAll","then","forEach","shouldProcess","readUrls","inline","exec","filter","RegExp","resolveAll","all","map","join","readAll","styleSheets","Object","getPrototypeOf","hasOwnProperty","cssRules","bind","log","CSSRule","FONT_FACE_RULE","style","parentStyleSheet","cssText","childNodes","getPropertyPriority","setProperty","newImage","toSvg","l","toPng","h","toJpeg","quality","toPixelData","getContext","getImageData","data","toCanvas","fontFaces","images","util","inliner","exports","module","domtoimage","getComputedStyle","atob","tagName","cloneNode","font","fontFamily","fontFeatureSettings","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantCaps","fontVariantEastAsian","fontVariantLigatures","fontVariantNumeric","fontVariationSettings","fontWeight","p","removeProperty","getAttribute","setAttribute","createTextNode","innerHTML","value","m","d","bgcolor","backgroundColor","keys","onclone","XMLSerializer","serializeToString","y","removeChild","g","clearTimeout","w","scale","fillStyle","fillRect","msImageSmoothingEnabled","imageSmoothingEnabled","drawImage","contentWindow","characterSet","doctype","name","publicId","systemId","trim","id","visibility","position","write","documentElement","outerHTML","contentDocument","title","innerText","textContent","indexOf"],"sources":["/workspaces/general-control/node_modules/dom-to-image-more/src/dom-to-image-more.js"],"sourcesContent":["(function (global) {\n    'use strict';\n\n    const util = newUtil();\n    const inliner = newInliner();\n    const fontFaces = newFontFaces();\n    const images = newImages();\n\n    // Default impl options\n    const defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests)\n        useCredentials: false,\n        // Default resolve timeout\n        httpTimeout: 30000\n    };\n\n    const domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        toCanvas: toCanvas,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            urlCache: [],\n            options: {}\n        }\n    };\n\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = domtoimage;\n    } else {\n        global.domtoimage = domtoimage;\n    }\n\n    // support node and browsers\n    const getComputedStyle = global.getComputedStyle || window.getComputedStyle;\n    const atob = global.atob || window.atob;\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {Function} options.onclone - Callback function which is called when the Document has been cloned for\n     *         rendering, can be used to modify the contents that will be rendered without affecting the original\n     *         source document.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {Number} options.scale - a Number multiplier to scale up the canvas before rendering to reduce fuzzy images, defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        const ownerWindow = domtoimage.impl.util.getWindow(node);\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (clonee) {\n                const root = true;\n                return cloneNode(clonee, options.filter, root, null, ownerWindow);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            })\n            .then(clearCache);\n\n        function clearCache(result) {\n            domtoimage.impl.urlCache = [];\n            removeSandbox();\n            return result;\n        }\n\n        function applyOptions(clone) {\n            if (options.bgcolor) { clone.style.backgroundColor = options.bgcolor; }\n            if (options.width) { clone.style.width = `${options.width}px`; }\n            if (options.height) { clone.style.height = `${options.height}px`; }\n\n            if (options.style) {\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n            }\n\n            let onCloneResult = null;\n\n            if (typeof options.onclone === \"function\") {\n                onCloneResult = options.onclone(clone);\n            }\n\n            return Promise.resolve(onCloneResult)\n                .then(function () {\n                    return clone;\n                });\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', (options ? options.quality : undefined) || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options)\n            .then(util.canvasToBlob);\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a canvas object\n     * */\n    function toCanvas(node, options) {\n        return draw(node, options);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if (typeof (options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if (typeof (options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n\n        if (typeof (options.useCredentials) === 'undefined') {\n            domtoimage.impl.options.useCredentials = defaultOptions.useCredentials;\n        } else {\n            domtoimage.impl.options.useCredentials = options.useCredentials;\n        }\n\n        if (typeof (options.httpTimeout) === 'undefined') {\n            domtoimage.impl.options.httpTimeout = defaultOptions.httpTimeout;\n        } else {\n            domtoimage.impl.options.httpTimeout = options.httpTimeout;\n        }\n    }\n\n    function draw(domNode, options) {\n        options = options || {};\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(0))\n            .then(function (image) {\n                const scale = typeof (options.scale) !== 'number' ? 1 : options.scale;\n                const canvas = newCanvas(domNode, scale);\n                const ctx = canvas.getContext('2d');\n                ctx.msImageSmoothingEnabled = false;\n                ctx.imageSmoothingEnabled = false;\n                if (image) {\n                    ctx.scale(scale, scale);\n                    ctx.drawImage(image, 0, 0);\n                }\n                return canvas;\n            });\n\n        function newCanvas(node, scale) {\n            const canvas = document.createElement('canvas');\n            canvas.width = (options.width || util.width(node)) * scale;\n            canvas.height = (options.height || util.height(node)) * scale;\n\n            if (options.bgcolor) {\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root, parentComputedStyles, ownerWindow) {\n        // NEVER clone SCRIPT blocks and if not at root, and there's a filter\n        // ignore anything for which filter returns falsey\n        if (node.tagName === 'SCRIPT'\n            || (!root && filter && !filter(node))) {\n            return Promise.resolve();\n        }\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(original) {\n            return util.isHTMLCanvasElement(original)\n                ? util.makeImage(original.toDataURL())\n                : original.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone) {\n            const children = original.childNodes;\n            if (children.length === 0) {\n                return Promise.resolve(clone);\n            }\n\n            return cloneChildrenInOrder(clone, util.asArray(children))\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, childs) {\n                const computedStyles = getComputedStyle(original);\n                let done = Promise.resolve();\n                childs.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter, false, computedStyles, ownerWindow);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) { parent.appendChild(childClone); }\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!util.isElement(clone)) { return clone; }\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(original, clone);\n\n                function copyFont(source, target) {\n                    target.font = source.font;\n                    target.fontFamily = source.fontFamily;\n                    target.fontFeatureSettings = source.fontFeatureSettings;\n                    target.fontKerning = source.fontKerning;\n                    target.fontSize = source.fontSize;\n                    target.fontStretch = source.fontStretch;\n                    target.fontStyle = source.fontStyle;\n                    target.fontVariant = source.fontVariant;\n                    target.fontVariantCaps = source.fontVariantCaps;\n                    target.fontVariantEastAsian = source.fontVariantEastAsian;\n                    target.fontVariantLigatures = source.fontVariantLigatures;\n                    target.fontVariantNumeric = source.fontVariantNumeric;\n                    target.fontVariationSettings = source.fontVariationSettings;\n                    target.fontWeight = source.fontWeight;\n                }\n\n                function copyStyle(sourceElement, targetElement) {\n                    const sourceComputedStyles = getComputedStyle(sourceElement);\n                    if (sourceComputedStyles.cssText) {\n                        targetElement.style.cssText = sourceComputedStyles.cssText;\n                        copyFont(sourceComputedStyles, targetElement.style); // here we re-assign the font props.\n                    } else {\n                        copyUserComputedStyleFast(sourceComputedStyles, parentComputedStyles, targetElement);\n\n                        // Remove positioning of root elements, which stops them from being captured correctly\n                        if (root) {\n                            ['inset-block', 'inset-block-start', 'inset-block-end']\n                                .forEach((prop) => targetElement.style.removeProperty(prop));\n                            ['left', 'right', 'top', 'bottom'].forEach((prop) => {\n                                if (targetElement.style.getPropertyValue(prop)) {\n                                    targetElement.style.setProperty(prop, '0px');\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                const cloneClassName = util.uid();\n\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    const style = getComputedStyle(original, element);\n                    const content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') { return; }\n\n                    const currentClass = clone.getAttribute('class') || '';\n                    clone.setAttribute('class', `${currentClass} ${cloneClassName}`);\n\n                    const styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle());\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle() {\n                        const selector = `.${cloneClassName}:${element}`;\n                        const cssText = style.cssText ? formatCssText() : formatCssProperties();\n                        return document.createTextNode(`${selector}{${cssText}}`);\n\n                        function formatCssText() {\n                            return `${style.cssText} content: ${content};`;\n                        }\n\n                        function formatCssProperties() {\n                            const styleText = util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ');\n                            return `${styleText};`;\n\n                            function formatProperty(name) {\n                                const propertyValue = style.getPropertyValue(name);\n                                const propertyPriority = style.getPropertyPriority(name) ? ' !important' : '';\n                                return `${name}: ${propertyValue}${(propertyPriority)}`;\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (util.isHTMLTextAreaElement(original)) { clone.innerHTML = original.value; }\n                if (util.isHTMLInputElement(original)) { clone.setAttribute(\"value\", original.value); }\n            }\n\n            function fixSvg() {\n                if (util.isSVGElement(clone)) {\n                    clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                    if (util.isSVGRectElement(clone)) {\n                        ['width', 'height'].forEach(function (attribute) {\n                            const value = clone.getAttribute(attribute);\n                            if (value) {\n                                clone.style.setProperty(attribute, value);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                if (cssText !== '') {\n                    const styleNode = document.createElement('style');\n                    node.appendChild(styleNode);\n                    styleNode.appendChild(document.createTextNode(cssText));\n                }\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (svg) {\n                svg.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(svg);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return `<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">${xhtml}</foreignObject>`;\n            })\n            .then(function (foreignObject) {\n                return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">${foreignObject}</svg>`;\n            })\n            .then(function (svg) {\n                return `data:image/svg+xml;charset=utf-8,${svg}`;\n            });\n    }\n\n    function newUtil() {\n        let uid_index = 0;\n\n        return {\n            escape: escapeRegEx,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid,\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height,\n            getWindow: getWindow,\n            isElement: isElement,\n            isHTMLElement: isHTMLElement,\n            isHTMLCanvasElement: isHTMLCanvasElement,\n            isHTMLInputElement: isHTMLInputElement,\n            isHTMLImageElement: isHTMLImageElement,\n            isHTMLTextAreaElement: isHTMLTextAreaElement,\n            isSVGElement: isSVGElement,\n            isSVGRectElement: isSVGRectElement\n        };\n\n        function getWindow(node) {\n            const ownerDocument = node ? node.ownerDocument : undefined;\n            return (ownerDocument ? ownerDocument.defaultView : undefined) || global || window;\n        }\n\n        function isElement(value) {\n            return value instanceof getWindow(value).Element;\n        }\n\n        function isHTMLCanvasElement(value) {\n            return value instanceof getWindow(value).HTMLCanvasElement;\n        }\n\n        function isHTMLElement(value) {\n            return value instanceof getWindow(value).HTMLElement;\n        }\n\n        function isHTMLImageElement(value) {\n            return value instanceof getWindow(value).HTMLImageElement;\n        }\n\n        function isHTMLInputElement(value) {\n            return value instanceof getWindow(value).HTMLInputElement;\n        }\n\n        function isSVGElement(value) {\n            return value instanceof getWindow(value).SVGElement;\n        }\n\n        function isSVGRectElement(value) {\n            return value instanceof getWindow(value).SVGRectElement;\n        }\n\n        function isHTMLTextAreaElement(value) {\n            return value instanceof getWindow(value).HTMLTextAreaElement;\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function asBlob(canvas) {\n            return new Promise(function (resolve) {\n                const binaryString = atob(canvas.toDataURL().split(',')[1]);\n                const length = binaryString.length;\n                const binaryArray = new Uint8Array(length);\n\n                for (let i = 0; i < length; i++) {\n                    binaryArray[i] = binaryString.charCodeAt(i);\n                }\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob) {\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n            }\n\n            return asBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            const doc = document.implementation.createHTMLDocument();\n            const base = doc.createElement('base');\n            doc.head.appendChild(base);\n            const a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            return `u${fourRandomChars()}${uid_index++}`;\n\n            function fourRandomChars() {\n                /* see https://stackoverflow.com/a/6248722/2519373 */\n                return (`0000${(Math.random() * Math.pow(36, 4) << 0).toString(36)}`).slice(-4);\n            }\n        }\n\n        function makeImage(uri) {\n            if (uri === 'data:,') { return Promise.resolve(); }\n\n            return new Promise(function (resolve, reject) {\n                const image = new Image();\n                if (domtoimage.impl.options.useCredentials) {\n                    image.crossOrigin = 'use-credentials';\n                }\n                image.onload = function () {\n                    if (window && window.requestAnimationFrame) {\n                        // In order to work around a Firefox bug (webcompat/web-bugs#119834) we\n                        // need to wait one extra frame before it's safe to read the image data.\n                        window.requestAnimationFrame(function () {\n                            resolve(image);\n                        });\n                    } else {\n                        // If we don't have a window or requestAnimationFrame function proceed immediately.\n                        resolve(image);\n                    }\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            let cacheEntry = domtoimage.impl.urlCache.find(function (el) {\n                return el.url === url;\n            });\n\n            if (!cacheEntry) {\n                cacheEntry = {\n                    url: url,\n                    promise: null\n                };\n                domtoimage.impl.urlCache.push(cacheEntry);\n            }\n\n            if (cacheEntry.promise === null) {\n                if (domtoimage.impl.options.cacheBust) {\n                    // Cache bypass so we dont have CORS issues with cached images\n                    // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                    url += ((/\\?/).test(url) ? '&' : '?') + (new Date()).getTime();\n                }\n\n                cacheEntry.promise = new Promise(function (resolve) {\n                    const httpTimeout = domtoimage.impl.options.httpTimeout;\n                    const request = new XMLHttpRequest();\n\n                    request.onreadystatechange = done;\n                    request.ontimeout = timeout;\n                    request.responseType = 'blob';\n                    request.timeout = httpTimeout;\n                    if (domtoimage.impl.options.useCredentials) {\n                        request.withCredentials = true;\n                    }\n                    request.open('GET', url, true);\n                    request.send();\n\n                    let placeholder;\n                    if (domtoimage.impl.options.imagePlaceholder) {\n                        const split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                        if (split && split[1]) {\n                            placeholder = split[1];\n                        }\n                    }\n\n                    function done() {\n                        if (request.readyState !== 4) { return; }\n\n                        if (request.status !== 200) {\n                            if (placeholder) {\n                                resolve(placeholder);\n                            } else {\n                                fail(`cannot fetch resource: ${url}, status: ${request.status}`);\n                            }\n\n                            return;\n                        }\n\n                        const encoder = new FileReader();\n                        encoder.onloadend = function () {\n                            resolve(encoder.result);\n                        };\n                        encoder.readAsDataURL(request.response);\n                    }\n\n                    function timeout() {\n                        if (placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail(`timeout of ${httpTimeout}ms occured while fetching resource: ${url}`);\n                        }\n                    }\n\n                    function fail(message) {\n                        console.error(message);\n                        resolve('');\n                    }\n                });\n            }\n            return cacheEntry.promise;\n        }\n\n        function escapeRegEx(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            const array = [];\n            const length = arrayLike.length;\n            for (let i = 0; i < length; i++) {\n                array.push(arrayLike[i]);\n            }\n\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/%/g, \"%25\").replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            const width = px(node, \"width\");\n            if (isNaN(width)) {\n              const leftBorder = px(node, 'border-left-width');\n              const rightBorder = px(node, 'border-right-width');\n              return node.scrollWidth + leftBorder + rightBorder;\n            }\n            return width;\n        }\n\n        function height(node) {\n            const height = px(node, \"height\");\n            if (isNaN(height)) {\n              const topBorder = px(node, 'border-top-width');\n              const bottomBorder = px(node, 'border-bottom-width');\n              return node.scrollHeight + topBorder + bottomBorder;\n            }\n            return height;\n        }\n\n        function px(node, styleProperty) {\n            let value = getComputedStyle(node).getPropertyValue(styleProperty);\n            if (value.slice(-2) !== 'px') {\n            \treturn NaN;\n            }\n            value = value.slice(0, -2);\n            return parseFloat(value);\n        }\n    }\n\n    function newInliner() {\n        const URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            const result = [];\n            let match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (urlValue) {\n                    return baseUrl ? util.resolveUrl(urlValue, baseUrl) : urlValue;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), `\\$1${dataUrl}\\$3`);\n                });\n\n            function urlAsRegex(urlValue) {\n                return new RegExp(`(url\\\\([\\'\"]?)(${util.escape(urlValue)})([\\'\"]?\\\\))`, 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) { return Promise.resolve(string); }\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    let done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (prefix) {\n                            return inline(prefix, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll()\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                const cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    if (Object.getPrototypeOf(sheet).hasOwnProperty(\"cssRules\")) {\n                        try {\n                            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                        } catch (e) {\n                            console.log(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                        }\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        const baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) { return Promise.resolve(); }\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve) {\n                            element.onload = resolve;\n                            // for any image with invalid src(such as <img src />), just ignore it\n                            element.onerror = resolve;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!util.isElement(node)) { return Promise.resolve(node); }\n\n            return inlineCSSProperty(node)\n                .then(function () {\n                    if (util.isHTMLImageElement(node)) {\n                        return newImage(node).inline();\n                    } else {\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                    }\n                });\n\n            function inlineCSSProperty(node) {\n                const properties = ['background', 'background-image'];\n\n                const inliningTasks = properties.map(function (propertyName) {\n                    const value = node.style.getPropertyValue(propertyName);\n                    const priority = node.style.getPropertyPriority(propertyName);\n\n                    if (!value) {\n                        return Promise.resolve();\n                    }\n\n                    return inliner.inlineAll(value)\n                        .then(function (inlinedValue) {\n                            node.style.setProperty(\n                                propertyName,\n                                inlinedValue,\n                                priority\n                            );\n                        });\n                });\n\n                return Promise.all(inliningTasks)\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n\n    function setStyleProperty(targetStyle, name, value, priority) {\n        const needs_prefixing = ['background-clip'].indexOf(name) >= 0;\n        if (priority) {\n            targetStyle.setProperty(name, value, priority);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value, priority);\n            }\n        } else {\n            targetStyle.setProperty(name, value);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value);\n            }\n        }\n    }\n\n    function copyUserComputedStyleFast(sourceComputedStyles, parentComputedStyles, targetElement) {\n        const defaultStyle = getDefaultStyle(targetElement.tagName);\n        const targetStyle = targetElement.style;\n\n        util.asArray(sourceComputedStyles).forEach(function (name) {\n            const sourceValue = sourceComputedStyles.getPropertyValue(name);\n            const defaultValue = defaultStyle[name];\n            const parentValue = parentComputedStyles ? parentComputedStyles.getPropertyValue(name) : undefined;\n\n            // If the style does not match the default, or it does not match the parent's, set it. We don't know which\n            // styles are inherited from the parent and which aren't, so we have to always check both.\n            if (sourceValue !== defaultValue ||\n                (parentComputedStyles && sourceValue !== parentValue)) {\n                const priority = sourceComputedStyles.getPropertyPriority(name);\n                setStyleProperty(targetStyle, name, sourceValue, priority);\n            }\n        });\n    }\n\n    let removeDefaultStylesTimeoutId = null;\n    let sandbox = null;\n    let tagNameDefaultStyles = {};\n\n    function getDefaultStyle(tagName) {\n        if (tagNameDefaultStyles[tagName]) {\n            return tagNameDefaultStyles[tagName];\n        }\n\n        // We haven't cached the answer for this tag yet, build a\n        // sandbox (if not yet created), fill it with the element\n        // and grab the default styles associated\n        const sandboxWindow = ensureSandboxWindow();\n        const sandboxDocument = sandboxWindow.document;\n        const defaultElement = constructElement(sandboxDocument, tagName);\n        const defaultStyle = computeStyleForDefaults(sandboxWindow, defaultElement);\n        destroyElement(sandboxDocument, defaultElement);\n\n        tagNameDefaultStyles[tagName] = defaultStyle;\n        return defaultStyle;\n\n        function ensureSandboxWindow() {\n            if (sandbox) {\n                return sandbox.contentWindow;\n            }\n\n            // figure out how this document is defined (doctype and charset)\n            const charsetToUse = document.characterSet || 'UTF-8';\n            const docType = document.doctype;\n            const docTypeDeclaration = docType\n                ? `<!DOCTYPE ${escapeHTML(docType.name)} ${escapeHTML(docType.publicId)} ${escapeHTML(docType.systemId)}`.trim() + '>'\n                : '';\n\n            // Create a hidden sandbox <iframe> element within we can create default HTML elements and query their\n            // computed styles. Elements must be rendered in order to query their computed styles. The <iframe> won't\n            // render at all with `display: none`, so we have to use `visibility: hidden` with `position: fixed`.\n            sandbox = document.createElement('iframe');\n            sandbox.id = 'domtoimage-sandbox-' + util.uid();\n            sandbox.style.visibility = 'hidden';\n            sandbox.style.position = 'fixed';\n            document.body.appendChild(sandbox);\n\n            return tryTechniques(\n                sandbox,\n                docTypeDeclaration,\n                charsetToUse,\n                'domtoimage-sandbox'\n            );\n\n            function escapeHTML(unsafeText) {\n                if (unsafeText) {\n                    const div = document.createElement('div');\n                    div.innerText = unsafeText;\n                    return div.innerHTML;\n                } else {\n                    return '';\n                }\n            }\n\n            function tryTechniques(sandbox, doctype, charset, title) {\n                // try the good old-fashioned document write with all the correct attributes set\n                try {\n                    sandbox.contentWindow.document.write(\n                        `${doctype}<html><head><meta charset='${charset}'><title>${title}</title></head><body></body></html>`\n                    );\n                    return sandbox.contentWindow;\n                } catch (_) {\n                    // swallow exception and fall through to next technique\n                }\n\n                const metaCharset = document.createElement('meta');\n                metaCharset.setAttribute('charset', charset);\n\n                // let's attempt it using srcdoc, so we can still set the doctype and charset\n                try {\n                    const sandboxDocument =\n                        document.implementation.createHTMLDocument(title);\n                    sandboxDocument.head.appendChild(metaCharset);\n                    const sandboxHTML =\n                        doctype + sandboxDocument.documentElement.outerHTML;\n                    sandbox.setAttribute('srcdoc', sandboxHTML);\n                    return sandbox.contentWindow;\n                } catch (_) {\n                    // swallow exception and fall through to the simplest path\n                }\n\n                // let's attempt it using contentDocument... here we're not able to set the doctype\n                sandbox.contentDocument.head.appendChild(metaCharset);\n                sandbox.contentDocument.title = title;\n                return sandbox.contentWindow;\n            }\n        }\n\n        function constructElement(sandboxDocument, tagName) {\n            const defaultElement = sandboxDocument.createElement(tagName);\n            sandboxDocument.body.appendChild(defaultElement);\n            // Ensure that there is some content, so that properties like margin are applied.\n            // we use zero-width space to handle FireFox adding a pixel\n            defaultElement.textContent = '\\u200b';\n            return defaultElement;\n        }\n\n        function computeStyleForDefaults(sandboxWindow, defaultElement) {\n            const defaultStyle = {};\n            const defaultComputedStyle = sandboxWindow.getComputedStyle(defaultElement);\n            // Copy styles to an object, making sure that 'width' and 'height' are given the default value of 'auto', since\n            // their initial value is always 'auto' despite that the default computed value is sometimes an absolute length.\n            util.asArray(defaultComputedStyle).forEach(function (name) {\n                defaultStyle[name] =\n                    (name === 'width' || name === 'height') ? 'auto' : defaultComputedStyle.getPropertyValue(name);\n            });\n            return defaultStyle;\n        }\n\n        function destroyElement(sandboxDocument, defaultElement) {\n            sandboxDocument.body.removeChild(defaultElement);\n        }\n    }\n\n    function removeSandbox() {\n        if (sandbox) {\n            document.body.removeChild(sandbox);\n            sandbox = null;\n        }\n        if (removeDefaultStylesTimeoutId) {\n            clearTimeout(removeDefaultStylesTimeoutId);\n        }\n        removeDefaultStylesTimeoutId = setTimeout(() => {\n            removeDefaultStylesTimeoutId = null;\n            tagNameDefaultStyles = {};\n        }, 20 * 1000);\n    }\n})(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}